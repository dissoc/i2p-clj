#+TITLE:     i2p-clj
#+AUTHOR:    Justin Bishop
#+LANGUAGE:  en
#+EMAIL:     (concat "mail" @ "dissoc.me")
#+TAGS:      clojure clj i2p anonymous

#+OPTIONS: num:nil
#+OPTIONS: toc:nil

i2p-clj is a clojure wrapper for the i2p network.

the test directory provides examples on how to use library

* installation
To install the extension run the command:
#+BEGIN_SRC sh :results output
  lein test
  lein install
#+END_SRC

* example
refer to tests for a more comprehensive example
#+BEGIN_SRC clojure
  ;;; ...

  (def server (create-i2p-socket-server
               {:destination-key   server-dest-key
                :connection-filter (create-connection-filter
                                    (fn [address]
                                      (check-address address)))}))

    (def client (create-i2p-socket-client
                 {:destination-key   client-dest-key
                  :remote-address    remote-address
                  :connection-filter (create-connection-filter
                                      (fn [_] true))}))

    (def client-dos (->> socket
                         .getOutputstream
                         (new DataOutputstream)))

    (sender client-dos "hello from client") ;; sent over wire as transit
#+END_SRC
